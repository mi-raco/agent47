Project: 
  Name: virtual-tutoring-system

  Version: 1.0

  Overview: 
  - An agent designed to provide virtual tutoring services to students. 
  - It should relate to students the way a human tutor would.
  - It should be able to adapt to the student's learning style and pace.

  Scope: 
    - Assessing how close a student is to their learning goals. 
    - Generate a learning plan.
    - Coming up with practice materials. 
    - Grade assignments.
    - Provide feedback on student performance.
    - Keeping track of their progress in a persistent database.
    - Be able to adapt the schemas of the database tables or collections on-the-fly.
    - Understand the evolving strengths and weaknesses of the student.

  User Journeys:
    - The student should communicate with the system through a simple chat interface.
    - A practice session can take many forms, the agent should be able to seamlessly switch between teaching, testing or simply checking in with the student.
    - The student should recieve feedback and advice at the end of a session.
    - The student should be able to monitor their progress and performance in a dashboard.

System Requirements:
  - High Throughput:
    description: The agent should be able to handle a large number of students at once.
    solution: 
      - Use an asynchronous web framework like FastAPI.
      - Use an asynchronous database driver like Motor.
  - Complex Behaviour:
    description: The agent takes on shifting roles, as it uses various tools in its arsenal to achieve the student's learning goal.
    solution: 
      - multi-agent application, with specific roles, operating in tandem

Potential Technologies:
  database: 
    - MongoDB
  backend:
    - FastAPI (main server)
    - liteLLM (Lightweight Language Model Wrapper)
    - Motor (Async MongoDB driver)
    - Pydantic (Data validation)
    - Pytest (Testing)
    - Swagger (API documentation)
  frontend:
    - NUXT3
    - openapi-generator-cli

  
